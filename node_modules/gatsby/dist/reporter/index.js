"use strict";

var _assign = require("babel-runtime/core-js/object/assign");

var _assign2 = _interopRequireDefault(_assign);

var _getPrototypeOf = require("babel-runtime/core-js/object/get-prototype-of");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _require = require("yurnalist"),
    createReporter = _require.createReporter;

var _require2 = require("common-tags"),
    stripIndent = _require2.stripIndent;

var convertHrtime = require("convert-hrtime");

var _require3 = require("./errors"),
    getErrorFormatter = _require3.getErrorFormatter;

var errorFormatter = getErrorFormatter();
var reporter = createReporter({ emoji: true });
var base = (0, _getPrototypeOf2.default)(reporter);

module.exports = (0, _assign2.default)(reporter, {
  stripIndent: stripIndent,

  setVerbose: function setVerbose(isVerbose) {
    this.isVerbose = true;
  },
  panic: function panic() {
    this.error.apply(this, arguments);
    process.exit(1);
  },
  error: function error(message, _error) {
    if (arguments.length === 1 && typeof message !== "string") {
      _error = message;
      message = _error.message;
    }
    base.error.call(this, message);
    if (_error) console.log(errorFormatter.render(_error));
  },
  uptime: function uptime(prefix) {
    this.verbose(prefix + ": " + (process.uptime() * 1000).toFixed(3) + "ms");
  },
  activityTimer: function activityTimer(name) {
    var spinner = reporter.activity();
    var start = process.hrtime();

    var elapsedTime = function elapsedTime() {
      var elapsed = process.hrtime(start);
      return convertHrtime(elapsed)["seconds"].toFixed(3) + " s";
    };

    return {
      start: function start() {
        spinner.tick(name);
      },
      end: function end() {
        reporter.success(name + " \u2014 " + elapsedTime());
        spinner.end();
      }
    };
  }
});
//# sourceMappingURL=index.js.map